setwd("C:\\Users\\Andrew\\OneDrive\\Documentos\\Pessoal\\Cursos\\DSA\\BigDataRAzure\\Cap03")
# Exercício 2 - Crie um dataframe a partir de 3 vetores: um de caracteres, um lógico e um de números
charac_vec <- c("A", "B", "C")
num_vec <- c(4.5, 3.9, 7.2)
logic_vec <- c(TRUE, TRUE, FALSE)
df1 <- data.frame(charac_vec, num_vec, logic_vec)
df1
vec1 <- c(12, 3, 4, 19, 34)
vec1
for (i in vec1){
if (i > 10)
print(i + "eh maior que 10")
}
print(as.character(i) + "eh maior que 10")
print(as.character(i), "eh maior que 10")
for (i in vec1){
if (i > 10)
print(as.character(i), "eh maior que 10")
}
for (i in vec1){
if (i > 10)
print(as.character(i) + "eh maior que 10")
}
for (i in vec1){
if (i > 10)
print(c(as.character(i), "eh maior que 10"))
}
lst2 <- list(2, 3, 5, 7, 11, 13)
lst2
for (item in lst2){
print(item)
}
for (index in 1:length(lst2)){
print(lst2[[i]])
}
for (index in 1:length(lst2)){
print(lst2[[index]])
}
mat1 <- matrix(c(1:50), nrow = 5, ncol = 5, byrow = T)
mat1
mat2 <- t(mat1)
mat2
mat1 * mat2
mat1 %*% mat2
# Exercício 6 - Crie um vetor, matriz, lista e dataframe e faça a nomeação de cada um dos objetos
vec1 <- c(12, 3, 4, 19, 34)
names(vec1) <- c('Col1', 'Col2', 'Col3', 'Col4', 'Col5')
vec1
mat1 <- matrix(c(1:25), nrow = 5, ncol = 5, byrow = T)
dimnames(mat1) <- (list(c("Obs1", "Obs2", "Obs3", "Obs4", "Obs5"), c("Var1", "Var2", "Var3", "Var4", "Var5")))
mat1
lst1 <- list(2, 3, c(1, 2, 3))
names(lst1) <- c('dim1', 'dim2', 'dim3')
lst1
df1 <- data.frame(c("A", "B", "C"), c(4.5, 3.9, 7.2), c(TRUE, TRUE, FALSE))
colnames(df1) <- c('Caracteres', 'Float', 'Logico')
rownames(df1) <- c("Obs1", "Obs2", "Obs3")
df1
mat2 <- matrix(1:90, 10)
mat2
?sample
mat2[sample(1:50, 10)] = NA
mat2
mat1 <- matrix(c(1:50), nrow = 5, ncol = 5, byrow = T)
mat1
rowSums(mat1)
colSums(mat1)
?rowsum
a <- c(100, 10, 10000, 1000)
a
order(a)
a[order(a)]
mat1 <- matrix(c(1:50), nrow = 5, ncol = 5, byrow = T)
mat1
for (item in mat1){
if(item > 15)
print(item)
}
setwd("C:\\Users\\Andrew\\OneDrive\\Documentos\\Pessoal\\Cursos\\DSA\\BigDataRAzure\\BigData-Analytics-with-R--Intro-to-R-with-mini-Projects\\Cap07")
getwd()
library(readr)
library(dplyr)
sono_df <- read_csv("sono.csv")
View(sono_df)
head(sono_df)
class(sono_df)
str(sono_df)
glimpse(sono_df)
# Mutanting
glimpse(mutate(sono_df, peso_libras = sono_total / 0.45359237))
# Counting and histogram
count(sono_df, cidade)
hist(sono_df$sono_total)
# Sampling
sample_n(sono_df, size = 10)
# selecting
sleepData <- select(sono_df, nome, sono_total)
head(sleep)
head(sleepData)
class(sleepData)
select(sono_df, nome)
select(sono_df, nome:cidade)
select(sono_df, nome:pais)
# filtering
filter(sono_df, sono_total >= 16)
filter(sono_df, sono_total >= 16, peso >= 80)
filter(sono_df, sono_total >= 16, peso >= 80)
filter(sono_df, cidade %in% c("Recife", "Curitiba"))
# Arange
sono_df %>% arrange(cidade) %>% head
sono_df %>%
select(nome, cidade, sono_total) %>%
arrange(cidade, sono_total) %>%
head
sono_df %>%
select(nome, cidade, sono_total) %>%
arrange(cidade, desc(sono_total)) %>%
filter(sono_total >= 16)
sono_df %>%
select(nome, cidade, sono_total) %>%
arrange(cidade, sono_total) %>%
filter(sono_total >= 16)
sono_df %>%
select(nome, cidade, sono_total) %>%
arrange(cidade, desc(sono_total)) %>%
filter(sono_total >= 16)
# Mutate
head(sono_df)
sono_df %>%
mutate(novo_indice = sono_total / peso) %>%
head
head(sono_df)
# summarize
sono_df %>%
summarise(media_sono = mean(sono_total))
sono_df %>%
summarise(media_sono = mean(sono_total),
min_sono = min(sono_total),
max_sono = max(sono_total),
total = n())
# group_by
sono_df %>%
group_by(cidade) %>%
summarise(avg_sono = mean(sono_total),
min_sono = min(sono_total),
max_sono = max(sono_total),
total = n())
# %>% operator
head(select(sono_df, nome, sono_total))
sono_df %>%
select(nome, sono_total) %>%
head
sono_df %>%
mutate(novo_indice = round(sono_total * peso)) %>%
arrange(desc(novo_indice)) %>%
select(cidade, novo_indice)
sono_df
install.packages("hflights")
library(hflights)
library(dplyr)
?hflights
?tbl_df
flights <- tbl_df(hflights)
flights <- as_tibble(hflights)
class(flights)
flights
flights <- tbl_df(hflights)
class(flights)
flights <- as_tibble(hflights) #tbl_df is deprecated
flights
class(flights)
str(hflights)
glimpse(hflights)
data.frame(head(flights))
# filtering with slices
flights[flights$Month == 1 & flights$DayofMonth == 1, ]
# filtering with filter function
filter(flights, Month == 1, DayofMonth == 1)
filter(flights, UniqueCarrier == "AA" | UniqueCarrier == "UA")
filter(flights, UniqueCarrier %in% c("AA", "UA"))
# select
select(flights, Year:DayofMonth, contains("Taxi"), contains("Delay"))
# Organizing
flights %>%
select(UniqueCarrier, DepDelay) %>%
arrange(DepDelay)
flights %>%
select(Distance, AirTime) %>%
mutate(Speed = Distance/AirTime*60)
head(with(flights, tapply(ArrDelay, Dest, mean, na.rm = TRUE)))
head(aggregate(ArrDelay ~ Dest, flights, mean))
flights %>%
group_by(Month, DayofMonth) %>%
tally(sort = TRUE)
?with
?tapply
?tally
install.packages("tidyr")
library(tidyr)
library(ggplot2)
dados <- data.frame(
Nome = c("Geografia", "Literatura", "Biologia"),
Regiao_A = c(97, 80, 84),
Regiao_B = c(86, 90, 91)
)
dados
dados %>%
gather(Regiao, NotaFinal, Regiao_A:Regiao_B)
set.seed(10)
df2 <- data.frame(
id = 1:4,
acao = sample(rep(c('controle', 'tratamento'), each = 2)),
work.T1 = runif(4),
home.T1 = runif(4),
work.T2 = runif(4),
home.T2 = runif(4)
)
df2
# reshape 1
?gather
df2_organizado1 <- df2 %>%
gather(key, time, -id, -acao)
df2_organizado1 %>% head(8)
df2_organizado1 <- pivot_longer(c(-id, -acao), names_to = key, values_to = time)
?pivot_longer
df2_organizado1 <- df2 %>% pivot_longer(c(-id, -acao), names_to = key, values_to = time)
df2_organizado1 <- df2 %>% pivot_longer(c(-id, -acao), names_to = "key", values_to = "time")
df2_organizado1 %>% head(8)
df2_organizado2 <- df2_organizado1 %>%
separate(key, into = c("localidade", "tempo"), sep = "\\.")
df2_organizado2 %>% head(8)
# reshape 2
?separate
?separate_wider_position
df2_organizado2 <- df2_organizado1 %>%
separate_wider_position(key, "\\.", c("localidade", "tempo"))
df2_organizado2 <- df2_organizado1 %>%
separate_wider_position(key, delim = "\\.", names = c("localidade", "tempo"))
df2_organizado2 <- df2_organizado1 %>%
separate_wider_delim(key, delim = "\\.", names = c("localidade", "tempo"))
df2_organizado2 <- df2_organizado1 %>%
separate_wider_delim(key, delim = ".", names = c("localidade", "tempo"))
df2_organizado2 %>% head(8)
# another example
set.seed(1)
df3 <- data.frame(
participante = c("p1", "p2", "p3", "p4", "p5", "p6"),
info = c("g1m", "g1m", "g1f", "g2m", "g2m", "g2m"),
day1score = rnorm(n = 6, mean = 80, sd = 15),
day2score = rnorm(n = 6, mean = 88, sd = 8)
)
print(df3)
# reshape
df3 %>%
gather(day, score, c(day1score, day2score))
df3 %>%
gather(day, score, c(day1score, day2score)) %>%
spread(day, score)
df3 %>%
gather(day, score, c(day1score, day2score)) %>%
separate(col = info, into = c("group", "gender"), sep = 2)
?separate_wider_position
df3 %>%
gather(day, score, c(day1score, day2score)) %>%
separate_wider_position(info, c(group = 2, gender = 1))
df3 %>%
gather(day, score, c(day1score, day2score)) %>%
separate(col = info, into = c("group", "gender"), sep = 2) %>%
unite(infoAgain, group, gender)
?spread
?pivot_wider
df3 %>%
gather(day, score, c(day1score, day2score)) %>%
pivot_wider(names_from = day, values_from = score)
df3 %>%
gather(day, score, c(day1score, day2score)) %>%
separate(col = info, into = c("group", "gender"), sep = 2) %>%
unite(infoAgain, group, gender)
?unite
df3 %>%
gather(day, score, c(day1score, day2score)) %>%
separate(col = info, into = c("group", "gender"), sep = 2) %>%
ggplot(aes(x = day, y = score)) +
geom_point() +
facet_wrap(~ group) +
geom_smooth(method = "lm", aes(group = 1), se = F)
t(mtcars)
# reshape
head(iris)
str(iris)
library(lattice)
# distributing data vertically(long)
?reshape
iris_modif <- reshape(iris,
varying = 1:4,
v.names = "Medidas",
timevar = "Dimensoes",
times = names(iris)[1:4],
idvar = "ID",
direction = "long")
head(iris_modif)
View(iris_modif)
bwplot(Medidas ~ Species | Dimensoes, data = iris_modif)
iris_modif_sp <- reshape(iris,
varying = list(c(1,3), c(2,4)),
v.names = c("Comprimento", "Largura"),
timevar = "Parte",
times = c("Sepal", "Petal"),
idvar = "ID",
direction = "long")
head(iris_modif_sp)
head(iris)
xyplot(Comprimento ~ Largura | Species, groups = Parte,
data = iris_modif_sp, auto.key = list(space = "right"))
xyplot(Comprimento ~ Largura | Parte, groups = Species,
data = iris_modif_sp, auto.key = list(space = "right"))
# reshape 2
library(reshape2)
df = data.frame(nome = c("Zico", "Pele"),
chuteira = c(40,42),
idade = c(34, NA),
peso = c(93, NA),
altura = c(175,178))
df
df_wide = melt(df, id = c("nome", "chuteira"))
df_wide
df_wide = melt(df, id = c("nome", "chuteira"), na.rm = TRUE)
df_wide
dcast(df_wide, formula = chuteira + nome ~ variable)
dcast(df_wide, formula = nome + chuteira ~ variable)
dcast(df_wide, formula = ... ~ variable)
dcast(df_wide, formula = nome ~ variable)
names(airquality) <- tolower(names(airquality))
head(airquality)
dim(airquality)
?melt
df_wide <- melt(airquality)
class(df_wide)
df_wide
head(df_wide)
tail(df_wide)
df_wide = melt(airquality, id.vars = c("month", "day"))
head(df_wide)
df_wide <- melt(airquality, id.vars = c("month", "dat"),
variable.name = "climate_variable",
value.name = "climate_value")
head(df_wide)
df_wide <- melt(airquality, id.vars = c("month", "day"))
df_long <- dcast(df_wide, month + day ~ variable)
head(df_long)
head(airquality)
